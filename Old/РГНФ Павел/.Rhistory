# ellipse graph with initials
pdf(file="facebook1.pdf", width=25, height=25)
attrs <- list(node=list(shape="ellipse", fixedsize=FALSE))
nAttrs <- list(label=friends.initial)
names(nAttrs$label) <- nodes(g)
plot(g, "neato", attrs=attrs, nodeAttrs=nAttrs)
dev.off()
install.packages("Rgraphviz")
source("http://bioconductor.org/biocLite.R")
biocLite("Rgraphviz")
# scrape the list of friends
friends <- facebook( path="me/friends" , access_token=access_token)
# extract Facebook IDs
friends.id <- sapply(friends$data, function(x) x$id)
# extract names
friends.name <- sapply(friends$data, function(x) iconv(x$name,"UTF-8","ASCII//TRANSLIT"))
# short names to initials
initials <- function(x) paste(substr(x,1,1), collapse="")
friends.initial <- sapply(strsplit(friends.name," "), initials)
# friendship relation matrix
N <- length(friends.id)
friendship.matrix <- matrix(0,N,N)
for (i in 1:N) {
tmp <- facebook( path=paste("me/mutualfriends", friends.id[i], sep="/") , access_token=access_token)
mutualfriends <- sapply(tmp$data, function(x) x$id)
friendship.matrix[i,friends.id %in% mutualfriends] <- 1
}
require(Rgraphviz)
# convert relation matrix to graph
g <- new("graphAM", adjMat=friendship.matrix)
# ellipse graph with initials
pdf(file="facebook1.pdf", width=25, height=25)
attrs <- list(node=list(shape="ellipse", fixedsize=FALSE))
nAttrs <- list(label=friends.initial)
names(nAttrs$label) <- nodes(g)
plot(g, "neato", attrs=attrs, nodeAttrs=nAttrs)
dev.off()
plot(g, "neato", attrs=attrs, nodeAttrs=nAttrs)
require(pixmap)
# download small profile picture of each friend
dir.create("photos")
for (i in 1:length(friends.id))
download.file(paste("http://graph.facebook.com", friends.id[i], "picture", sep="/"),
destfile=paste("photos/",friends.id[i],".jpg",sep=""))
system('for i in `ls photos/*.jpg`; do j=${i%.*}; convert $j.jpg $j.pnm; done', wait=TRUE)
# customized node plotting function
makeNodeDrawFunction <- function(x) {
force(x)
function(node, ur, attrs, radConv) {
photo <- read.pnm(paste("photos/", x, ".pnm", sep=""))
nc <- getNodeCenter(node)
addlogo(photo, c(getX(nc)-25, getX(nc)+25), c(getY(nc)-25, getY(nc)+25))
}
}
drawFuns <- apply(as.array(friends.id), 1, makeNodeDrawFunction)
# a graph with photos
pdf(file="facebook2.pdf", width=25, height=25)
attrs <- list(node=list(shape="box", width=0.75, height=0.75))
plot(g, "neato", attrs=attrs, drawNode=drawFuns)
dev.off()
dev.off()
# scrape the list of friends
friends <- facebook( path="me/friends" , access_token=access_token)
# extract Facebook IDs
friends.id <- sapply(friends$data, function(x) x$id)
# extract names
friends.name <- sapply(friends$data, function(x) iconv(x$name,"UTF-8","ASCII//TRANSLIT"))
# short names to initials
initials <- function(x) paste(substr(x,1,1), collapse="")
friends.initial <- sapply(strsplit(friends.name," "), initials)
# friendship relation matrix
N <- length(friends.id)
friendship.matrix <- matrix(0,N,N)
for (i in 1:N) {
tmp <- facebook( path=paste("me/mutualfriends", friends.id[i], sep="/") , access_token=access_token)
mutualfriends <- sapply(tmp$data, function(x) x$id)
friendship.matrix[i,friends.id %in% mutualfriends] <- 1
}
require(Rgraphviz)
# convert relation matrix to graph
g <- new("graphAM", adjMat=friendship.matrix)
# ellipse graph with initials
pdf(file="facebook1.pdf", width=25, height=25)
attrs <- list(node=list(shape="ellipse", fixedsize=FALSE))
nAttrs <- list(label=friends.initial)
names(nAttrs$label) <- nodes(g)
plot(g, "neato", attrs=attrs, nodeAttrs=nAttrs)
dev.off()
# scrape the list of friends
friends <- facebook( path="me/friends" , access_token=access_token)
# extract Facebook IDs
friends.id <- sapply(friends$data, function(x) x$id)
# extract names
friends.name <- sapply(friends$data, function(x) iconv(x$name,"UTF-8","ASCII//TRANSLIT"))
# short names to initials
initials <- function(x) paste(substr(x,1,1), collapse="")
friends.initial <- sapply(strsplit(friends.name," "), initials)
# friendship relation matrix
N <- length(friends.id)
friendship.matrix <- matrix(0,N,N)
for (i in 1:N) {
tmp <- facebook( path=paste("me/mutualfriends", friends.id[i], sep="/") , access_token=access_token)
mutualfriends <- sapply(tmp$data, function(x) x$id)
friendship.matrix[i,friends.id %in% mutualfriends] <- 1
}
require(Rgraphviz)
# convert relation matrix to graph
g <- new("graphAM", adjMat=friendship.matrix)
# ellipse graph with initials
pdf(file="facebook1.pdf", width=25, height=25)
attrs <- list(node=list(shape="ellipse", fixedsize=FALSE))
nAttrs <- list(label=friends.initial)
names(nAttrs$label) <- nodes(g)
plot(g, "neato", attrs=attrs, nodeAttrs=nAttrs)
dev.off()
require(pixmap)
# download small profile picture of each friend
dir.create("photos")
for (i in 1:length(friends.id))
download.file(paste("http://graph.facebook.com", friends.id[i], "picture", sep="/"),
destfile=paste("photos/",friends.id[i],".jpg",sep=""))
system('for i in `ls photos/*.jpg`; do j=${i%.*}; convert $j.jpg $j.pnm; done', wait=TRUE)
# customized node plotting function
makeNodeDrawFunction <- function(x) {
force(x)
function(node, ur, attrs, radConv) {
photo <- read.pnm(paste("photos/", x, ".pnm", sep=""))
nc <- getNodeCenter(node)
addlogo(photo, c(getX(nc)-25, getX(nc)+25), c(getY(nc)-25, getY(nc)+25))
}
}
drawFuns <- apply(as.array(friends.id), 1, makeNodeDrawFunction)
# a graph with photos
pdf(file="facebook2.pdf", width=25, height=25)
attrs <- list(node=list(shape="box", width=0.75, height=0.75))
plot(g, "neato", attrs=attrs, drawNode=drawFuns)
dev.off()
# scrape the list of friends
friends <- facebook( path="me/friends" , access_token=access_token)
# extract Facebook IDs
friends.id <- sapply(friends$data, function(x) x$id)
# extract names
friends.name <- sapply(friends$data, function(x) iconv(x$name,"UTF-8","ASCII//TRANSLIT"))
# short names to initials
initials <- function(x) paste(substr(x,5,5), collapse="")
friends.initial <- sapply(strsplit(friends.name," "), initials)
# friendship relation matrix
N <- length(friends.id)
friendship.matrix <- matrix(0,N,N)
for (i in 1:N) {
tmp <- facebook( path=paste("me/mutualfriends", friends.id[i], sep="/") , access_token=access_token)
mutualfriends <- sapply(tmp$data, function(x) x$id)
friendship.matrix[i,friends.id %in% mutualfriends] <- 1
}
require(Rgraphviz)
# convert relation matrix to graph
g <- new("graphAM", adjMat=friendship.matrix)
# ellipse graph with initials
pdf(file="facebook1.pdf", width=25, height=25)
attrs <- list(node=list(shape="ellipse", fixedsize=FALSE))
nAttrs <- list(label=friends.initial)
names(nAttrs$label) <- nodes(g)
plot(g, "neato", attrs=attrs, nodeAttrs=nAttrs)
dev.off()
# scrape the list of friends
friends <- facebook( path="me/friends" , access_token=access_token)
# extract Facebook IDs
friends.id <- sapply(friends$data, function(x) x$id)
# extract names
friends.name <- sapply(friends$data, function(x) iconv(x$name,"UTF-8","ASCII//TRANSLIT"))
# short names to initials
initials <- function(x) paste(substr(x,1,5), collapse="")
friends.initial <- sapply(strsplit(friends.name," "), initials)
# friendship relation matrix
N <- length(friends.id)
friendship.matrix <- matrix(0,N,N)
for (i in 1:N) {
tmp <- facebook( path=paste("me/mutualfriends", friends.id[i], sep="/") , access_token=access_token)
mutualfriends <- sapply(tmp$data, function(x) x$id)
friendship.matrix[i,friends.id %in% mutualfriends] <- 1
}
require(Rgraphviz)
# convert relation matrix to graph
g <- new("graphAM", adjMat=friendship.matrix)
# ellipse graph with initials
pdf(file="facebook1.pdf", width=25, height=25)
attrs <- list(node=list(shape="ellipse", fixedsize=FALSE))
nAttrs <- list(label=friends.initial)
names(nAttrs$label) <- nodes(g)
plot(g, "neato", attrs=attrs, nodeAttrs=nAttrs)
dev.off()
install.packages("extrafont")
library(extrafont)
font_import()
library(extrafont)
loadfonts()
# scrape the list of friends
friends <- facebook( path="me/friends" , access_token=access_token)
# extract Facebook IDs
friends.id <- sapply(friends$data, function(x) x$id)
# extract names
friends.name <- sapply(friends$data, function(x) iconv(x$name,"UTF-8","ASCII//TRANSLIT"))
# short names to initials
initials <- function(x) paste(substr(x,1,1), collapse="")
friends.initial <- sapply(strsplit(friends.name," "), initials)
# friendship relation matrix
N <- length(friends.id)
friendship.matrix <- matrix(0,N,N)
for (i in 1:N) {
tmp <- facebook( path=paste("me/mutualfriends", friends.id[i], sep="/") , access_token=access_token)
mutualfriends <- sapply(tmp$data, function(x) x$id)
friendship.matrix[i,friends.id %in% mutualfriends] <- 1
}
require(Rgraphviz)
# convert relation matrix to graph
g <- new("graphAM", adjMat=friendship.matrix)
# ellipse graph with initials
pdf(file="facebook1.pdf", family="Arial", width=25, height=25)
attrs <- list(node=list(shape="ellipse", fixedsize=FALSE))
nAttrs <- list(label=friends.initial)
names(nAttrs$label) <- nodes(g)
plot(g, "neato", attrs=attrs, nodeAttrs=nAttrs)
dev.off()
source('C:/R/facebook_mining.r')
source('~/.active-rstudio-document')
source('C:/R/facebook_mining.r')
q()
source('~/.active-rstudio-document')
require(pixmap)
# download small profile picture of each friend
dir.create("photos")
for (i in 1:length(friends.id))
download.file(paste("http://graph.facebook.com", friends.id[i], "picture", sep="/"),
destfile=paste("photos/",friends.id[i],".jpg",sep=""))
system('for i in `ls photos/*.jpg`; do j=${i%.*}; convert $j.jpg $j.pnm; done', wait=TRUE)
# customized node plotting function
makeNodeDrawFunction <- function(x) {
force(x)
function(node, ur, attrs, radConv) {
photo <- read.pnm(paste("photos/", x, ".pnm", sep=""))
nc <- getNodeCenter(node)
addlogo(photo, c(getX(nc)-25, getX(nc)+25), c(getY(nc)-25, getY(nc)+25))
}
}
drawFuns <- apply(as.array(friends.id), 1, makeNodeDrawFunction)
# a graph with photos
pdf(file="facebook2.pdf", width=25, height=25)
attrs <- list(node=list(shape="box", width=0.75, height=0.75))
plot(g, "neato", attrs=attrs, drawNode=drawFuns)
dev.off()
install.packages("pixmap")
require(pixmap)
# download small profile picture of each friend
dir.create("photos")
for (i in 1:length(friends.id))
download.file(paste("http://graph.facebook.com", friends.id[i], "picture", sep="/"),
destfile=paste("photos/",friends.id[i],".jpg",sep=""))
system('for i in `ls photos/*.jpg`; do j=${i%.*}; convert $j.jpg $j.pnm; done', wait=TRUE)
# customized node plotting function
makeNodeDrawFunction <- function(x) {
force(x)
function(node, ur, attrs, radConv) {
photo <- read.pnm(paste("photos/", x, ".pnm", sep=""))
nc <- getNodeCenter(node)
addlogo(photo, c(getX(nc)-25, getX(nc)+25), c(getY(nc)-25, getY(nc)+25))
}
}
drawFuns <- apply(as.array(friends.id), 1, makeNodeDrawFunction)
# a graph with photos
pdf(file="facebook2.pdf", width=25, height=25)
attrs <- list(node=list(shape="box", width=0.75, height=0.75))
plot(g, "neato", attrs=attrs, drawNode=drawFuns)
dev.off()
require(pixmap)
# download small profile picture of each friend
dir.create("photos")
for (i in 1:length(friends.id))
download.file(paste("http://graph.facebook.com", friends.id[i], "picture", sep="/"),
destfile=paste("photos/",friends.id[i],".jpg",sep=""))
system('for i in `ls photos/*.jpg`; do j=${i%.*}; convert $j.jpg $j.pnm; done', wait=TRUE)
# customized node plotting function
makeNodeDrawFunction <- function(x) {
force(x)
function(node, ur, attrs, radConv) {
photo <- read.pnm(paste("photos/", x, ".pnm", sep=""))
nc <- getNodeCenter(node)
addlogo(photo, c(getX(nc)-25, getX(nc)+25), c(getY(nc)-25, getY(nc)+25))
}
}
drawFuns <- apply(as.array(friends.id), 1, makeNodeDrawFunction)
# a graph with photos
pdf(file="facebook2.pdf", width=25, height=25)
attrs <- list(node=list(shape="box", width=0.75, height=0.75))
plot(g, "neato", attrs=attrs, drawNode=drawFuns)
dev.off()
source('~/.active-rstudio-document')
require(pixmap)
# download small profile picture of each friend
dir.create("photos")
for (i in 1:length(friends.id))
download.file(paste("http://graph.facebook.com", friends.id[i], "picture", sep="/"),
destfile=paste("photos/",friends.id[i],".jpg",sep=""))
system('for i in `ls photos/*.jpg`; do j=${i%.*}; convert $j.jpg $j.pnm; done', wait=TRUE)
# customized node plotting function
makeNodeDrawFunction <- function(x) {
force(x)
function(node, ur, attrs, radConv) {
photo <- read.pnm(paste("photos/", x, ".pnm", sep=""))
nc <- getNodeCenter(node)
addlogo(photo, c(getX(nc)-25, getX(nc)+25), c(getY(nc)-25, getY(nc)+25))
}
}
drawFuns <- apply(as.array(friends.id), 1, makeNodeDrawFunction)
# a graph with photos
pdf(file="facebook2.pdf", width=25, height=25)
attrs <- list(node=list(shape="box", width=0.75, height=0.75))
plot(g, "neato", attrs=attrs, drawNode=drawFuns)
dev.off()
source('~/.active-rstudio-document')
require(pixmap)
# download small profile picture of each friend
dir.create("photos")
for (i in 1:length(friends.id))
download.file(paste("http://graph.facebook.com", friends.id[i], "picture", sep="/"),
destfile=paste("photos/",friends.id[i],".jpg",sep=""))
system('for i in `ls photos/*.jpg`; do j=${i%.*}; convert $j.jpg $j.pnm; done', wait=TRUE)
# customized node plotting function
makeNodeDrawFunction <- function(x) {
force(x)
function(node, ur, attrs, radConv) {
photo <- read.pnm(paste("photos/", x, ".pnm", sep=""))
nc <- getNodeCenter(node)
addlogo(photo, c(getX(nc)-25, getX(nc)+25), c(getY(nc)-25, getY(nc)+25))
}
}
drawFuns <- apply(as.array(friends.id), 1, makeNodeDrawFunction)
# a graph with photos
pdf(file="facebook2.pdf", width=25, height=25)
attrs <- list(node=list(shape="box", width=0.75, height=0.75))
plot(g, "neato", attrs=attrs, drawNode=drawFuns)
dev.off()
source('~/.active-rstudio-document')
friends <- facebook( path="me/friends" , access_token=access_token)
# extract Facebook IDs
friends.id <- sapply(friends$data, function(x) x$id)
require(pixmap)
# download small profile picture of each friend
dir.create("photos")
for (i in 1:length(friends.id))
download.file(paste("http://graph.facebook.com", friends.id[i], "picture", sep="/"),
destfile=paste("photos/",friends.id[i],".jpg",sep=""))
system('for i in `ls photos/*.jpg`; do j=${i%.*}; convert $j.jpg $j.pnm; done', wait=TRUE)
# customized node plotting function
makeNodeDrawFunction <- function(x) {
force(x)
function(node, ur, attrs, radConv) {
photo <- read.pnm(paste("photos/", x, ".pnm", sep=""))
nc <- getNodeCenter(node)
addlogo(photo, c(getX(nc)-25, getX(nc)+25), c(getY(nc)-25, getY(nc)+25))
}
}
drawFuns <- apply(as.array(friends.id), 1, makeNodeDrawFunction)
# a graph with photos
pdf(file="facebook2.pdf", width=25, height=25)
attrs <- list(node=list(shape="box", width=0.75, height=0.75))
plot(g, "neato", attrs=attrs, drawNode=drawFuns)
dev.off()
friends <- facebook( path="me/friends" , access_token=access_token)
# extract Facebook IDs
friends.id <- sapply(friends$data, function(x) x$id)
require(pixmap)
# download small profile picture of each friend
dir.create("photos")
for (i in 1:length(friends.id))
download.file(paste("http://graph.facebook.com", friends.id[i], "picture", sep="/"),
destfile=paste("photos/",friends.id[i],".jpg",sep=""))
system('for i in `ls photos/*.jpg`; do j=${i%.*}; convert $j.jpg $j.pnm; done', wait=TRUE)
# customized node plotting function
makeNodeDrawFunction <- function(x) {
force(x)
function(node, ur, attrs, radConv) {
photo <- read.pnm(paste("photos/", x, ".pnm", sep=""))
nc <- getNodeCenter(node)
addlogo(photo, c(getX(nc)-25, getX(nc)+25), c(getY(nc)-25, getY(nc)+25))
}
}
drawFuns <- apply(as.array(friends.id), 1, makeNodeDrawFunction)
# a graph with photos
pdf(file="facebook2.pdf", width=25, height=25)
attrs <- list(node=list(shape="box", width=0.75, height=0.75))
plot(g, "neato", attrs=attrs, drawNode=drawFuns)
dev.off()
# scrape the list of friends
friends <- facebook( path="me/friends" , access_token=access_token)
# extract Facebook IDs
friends.id <- sapply(friends$data, function(x) x$id)
# extract names
friends.name <- sapply(friends$data, function(x) iconv(x$name,"UTF-8","ASCII//TRANSLIT"))
# short names to initials
initials <- function(x) paste(substr(x,1,1), collapse="")
friends.initial <- sapply(strsplit(friends.name," "), initials)
# friendship relation matrix
N <- length(friends.id)
friendship.matrix <- matrix(0,N,N)
for (i in 1:N) {
tmp <- facebook( path=paste("me/mutualfriends", friends.id[i], sep="/") , access_token=access_token)
mutualfriends <- sapply(tmp$data, function(x) x$id)
friendship.matrix[i,friends.id %in% mutualfriends] <- 1
}
require(Rgraphviz)
# convert relation matrix to graph
g <- new("graphAM", adjMat=friendship.matrix)
require(pixmap)
# download small profile picture of each friend
dir.create("photos")
for (i in 1:length(friends.id))
download.file(paste("http://graph.facebook.com", friends.id[i], "picture", sep="/"),
destfile=paste("photos/",friends.id[i],".jpg",sep=""))
system('for i in `ls photos/*.jpg`; do j=${i%.*}; convert $j.jpg $j.pnm; done', wait=TRUE)
# customized node plotting function
makeNodeDrawFunction <- function(x) {
force(x)
function(node, ur, attrs, radConv) {
photo <- read.pnm(paste("photos/", x, ".pnm", sep=""))
nc <- getNodeCenter(node)
addlogo(photo, c(getX(nc)-25, getX(nc)+25), c(getY(nc)-25, getY(nc)+25))
}
}
drawFuns <- apply(as.array(friends.id), 1, makeNodeDrawFunction)
# a graph with photos
pdf(file="facebook2.pdf", width=25, height=25)
attrs <- list(node=list(shape="box", width=0.75, height=0.75))
plot(g, "neato", attrs=attrs, drawNode=drawFuns)
dev.off()
library(RCurl)
library(twitteR)
library(ROAuth)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL = "http://api.twitter.com/oauth/access_token"
authURL = "http://api.twitter.com/oauth/authorize"
consumerKey = "myconsumerkeystring"
consumerSecret = "myconsumersecretstring"
Cred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=requestURL,
accessURL=accessURL,
authURL=authURL)
#The next command provides a URL which you will need to copy and paste into your favourite browser
#Assuming you are logged into Twitter you will then be provided a PIN number to type into the R command line
Cred$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl") )
# Checks that you are authorised
registerTwitterOAuth(Cred)
install.packages("kohonen")
install.packages("shiny")
demo()
install.packages("shiny")
setwd("~/R/win-library/3.1")
install.packages("shiny")
library(shiny)
runExample("01_hello")
system.file("examples", package="shiny")
runExample("02_text")
runExample("03_reactivity")
runExample("04_mpg")
runExample("06_tabsets")
runExample("07_widgets")
runExample("08_html")
runExample("09_upload")
runExample("10_download")
library(shiny)
runExample("01_hello")
runExample("01_hello")
setwd("C:/Users/Анастасия/Desktop/РГНФ Павел")
runApp("interface")
setwd("C:/Users/Анастасия/Desktop/РГНФ Павел")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
runApp("interface")
install.packages(c("maps", "mapproj"))
