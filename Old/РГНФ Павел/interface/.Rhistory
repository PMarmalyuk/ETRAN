runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
library(shiny)
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
new(Class = "RawDataRecords")
new(Class = "RawDataRecords", rawDataRecordsList = list())
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
data.frame(FileNames = NA, stringsAsFactors = F, colnames = c("FileNames"))[-1,]
data.frame(FileNames = NA, stringsAsFactors = F, col.names = c("FileNames"))[-1,]
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
new(Class = "RawDataRecords", rawDataRecordsList = list())
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
new(Class = "DataSample")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
new(Class = "DataSample")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
df <- data.frame(FileNames = NA, stringsAsFactors = F)
names(df) <- c("FileNames")
df <- df[-1,]
df
df <- data.frame(FileNames = character(), stringsAsFactors = F)
names(df) <- c("FileNames")
df
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
devtools::install_github("AnalytixWare/ShinySky")
library(shinysky)
shinysky::run.shinysky.example()
library(shinyTable)
renderHtable()
server <- function(input, output, session) {
rv <- reactiveValues(cachedTbl = NULL)
output$tbl <- renderHtable({
if (is.null(input$tbl)){
#fill table with 0
tbl <- matrix(0, nrow=3, ncol=3)
rv$cachedTbl <<- tbl
return(tbl)
} else{
rv$cachedTbl <<- input$tbl
return(input$tbl)
}
})
output$tblNonEdit <- renderTable({
#add dependence on button
input$actionButtonID
#isolate the cached table so it only responds when the button is pressed
isolate({
rv$cachedTbl
})
})
}
ui <- shinyUI(pageWithSidebar(
headerPanel("shinyTable with actionButton to apply changes"),
sidebarPanel(
helpText(HTML("A simple editable matrix with a functioning update button.
Using actionButton not submitButton.
Make changes to the upper table, press the button and they will appear in the lower.
<p>Created using <a href = \"http://github.com/trestletech/shinyTable\">shinyTable</a>."))
),
# Show the simple table
mainPanel(
#editable table
htable("tbl"),
#update button
actionButton("actionButtonID","apply table edits"),
#to show saved edits
tableOutput("tblNonEdit")
)
))
shinyApp(ui = ui, server = server)
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
runApp("F:\\Институт\\Проекты\\EyeTrackingPackage\\Git\\EyeTrackingProject\\Shiny")
?renderHotable
?renderHotable
shiny::runGitHub("shinyalert-example","xiaodaigh")
if (!require("shinyTable")) devtools::install_github("trestletech/shinyTable")
devtools::install_github("trestletech/shinyTable")
if (!require("shinysky")) devtools::install_github("AnalytixWare/ShinySky")
library(shinyTable)
if (!require("shinyTable")) devtools::install_github("trestletech/shinyTable")
if (!require("DT")) install.packages('DT', repos = 'http://cran.rstudio.com')
library(shinyTable)
