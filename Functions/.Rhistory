return(list(dfSubj = dfSubjects, dfStim = dfStimuli, dfTrials = dfTrials))
}
)
df2 <- asDataFrames(factorsData, availFactors)
availFactors
setMethod("asDataFrame",  "FactorsData",
function(self, owner, availableFactors)
{
ownersIDs <- as.integer(unique(self@subjectsFactors$ownerID))
factorsIDs <- unique(availFactors@availableFactors$id[availableFactors@availableFactors$owner == owner])
if (owner == "Subject") {ownersFactors <- factorsData@subjectsFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@stimuliFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@trialsFactors}
varCnt <- length(factorsIDs)
factorNames <- sapply(factorsIDs, function(x) {getNameByFactorID(availableFactors,x)})
df <- list()
for (ownerID in ownersIDs)
{
tmpRec <- c(rep(NA, varCnt))
subjFactorsIDs <- ownersFactors$factorID[self@subjectsFactors$ownerID == ownerID]
varPositions <- sapply(subjFactorsIDs, function(x) which(factorsIDs == x))
values <- ownersFactors$value[which(ownersFactors$ownerID == ownerID)]
df <- rbind(df, c(rep(NA, varCnt)))
df[nrow(df), varPositions] <- values
}
df <- as.data.frame(df)
colnames(df) <- factorNames
factorTypes <- sapply(factorsIDs, function(x) {getTypeByFactorID(availableFactors,x)})
factorLevels <- sapply(factorsIDs, function(x) {getLevelsByFactorID(availableFactors,x)})
for (i in 1:length(df))
{
if (factorTypes[i] == "integer") {df[,i] <- as.integer(df[,i])}
if (factorTypes[i] == "numeric") {df[,i] <- as.numeric(df[,i])}
if (factorTypes[i] == "factor") {df[,i] <- factor(df[,i], levels = factorLevels[[i]])}
if (factorTypes[i] == "ordFactor") {df[,i] <- ordered(df[,i], levels = factorLevels[[i]])}
}
df <- cbind(ownersIDs, df)
return(df)
}
)
setGeneric("asDataFrame", function(self, owner, availableFactors){standardGeneric("asDataFrame")})
setMethod("asDataFrame",  "FactorsData",
function(self, owner, availableFactors)
{
ownersIDs <- as.integer(unique(self@subjectsFactors$ownerID))
factorsIDs <- unique(availFactors@availableFactors$id[availableFactors@availableFactors$owner == owner])
if (owner == "Subject") {ownersFactors <- factorsData@subjectsFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@stimuliFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@trialsFactors}
varCnt <- length(factorsIDs)
factorNames <- sapply(factorsIDs, function(x) {getNameByFactorID(availableFactors,x)})
df <- list()
for (ownerID in ownersIDs)
{
tmpRec <- c(rep(NA, varCnt))
subjFactorsIDs <- ownersFactors$factorID[self@subjectsFactors$ownerID == ownerID]
varPositions <- sapply(subjFactorsIDs, function(x) which(factorsIDs == x))
values <- ownersFactors$value[which(ownersFactors$ownerID == ownerID)]
df <- rbind(df, c(rep(NA, varCnt)))
df[nrow(df), varPositions] <- values
}
df <- as.data.frame(df)
colnames(df) <- factorNames
factorTypes <- sapply(factorsIDs, function(x) {getTypeByFactorID(availableFactors,x)})
factorLevels <- sapply(factorsIDs, function(x) {getLevelsByFactorID(availableFactors,x)})
for (i in 1:length(df))
{
if (factorTypes[i] == "integer") {df[,i] <- as.integer(df[,i])}
if (factorTypes[i] == "numeric") {df[,i] <- as.numeric(df[,i])}
if (factorTypes[i] == "factor") {df[,i] <- factor(df[,i], levels = factorLevels[[i]])}
if (factorTypes[i] == "ordFactor") {df[,i] <- ordered(df[,i], levels = factorLevels[[i]])}
}
df <- cbind(ownersIDs, df)
return(df)
}
)
df2 <- asDataFrames(factorsData, owner = "Subject", availFactors)
df2 <- asDataFrame(factorsData, owner = "Subject", availFactors)
df2
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
setMethod("asDataFrame",  "FactorsData",
function(self, owner, availableFactors)
{
ownersIDs <- as.integer(unique(self@subjectsFactors$ownerID))
factorsIDs <- unique(availFactors@availableFactors$id[availableFactors@availableFactors$owner == owner])
if (length(factorsIDs) == 0) {warning("Factors were not specified for this owner!"); return(NULL)}
if (owner == "Subject") {ownersFactors <- factorsData@subjectsFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@stimuliFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@trialsFactors}
varCnt <- length(factorsIDs)
factorNames <- sapply(factorsIDs, function(x) {getNameByFactorID(availableFactors,x)})
df <- list()
for (ownerID in ownersIDs)
{
tmpRec <- c(rep(NA, varCnt))
subjFactorsIDs <- ownersFactors$factorID[self@subjectsFactors$ownerID == ownerID]
varPositions <- sapply(subjFactorsIDs, function(x) which(factorsIDs == x))
values <- ownersFactors$value[which(ownersFactors$ownerID == ownerID)]
df <- rbind(df, c(rep(NA, varCnt)))
df[nrow(df), varPositions] <- values
}
df <- as.data.frame(df)
colnames(df) <- factorNames
factorTypes <- sapply(factorsIDs, function(x) {getTypeByFactorID(availableFactors,x)})
factorLevels <- sapply(factorsIDs, function(x) {getLevelsByFactorID(availableFactors,x)})
for (i in 1:length(df))
{
if (factorTypes[i] == "integer") {df[,i] <- as.integer(df[,i])}
if (factorTypes[i] == "numeric") {df[,i] <- as.numeric(df[,i])}
if (factorTypes[i] == "factor") {df[,i] <- factor(df[,i], levels = factorLevels[[i]])}
if (factorTypes[i] == "ordFactor") {df[,i] <- ordered(df[,i], levels = factorLevels[[i]])}
}
df <- cbind(ownersIDs, df)
return(df)
}
)
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
df2 <- asDataFrame(factorsData, owner = "Subject", availFactors)
df2
objectsCount <- new(Class = "Factor", varName = "objectsCount", description = "Number of objects in stimulus", type = "integer", owner = "Stimulus")
df2 <- asDataFrame(factorsData, owner = "Subject", availFactors)
df2
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
availFactors
availFactors <- addFactorDefinition(availFactors, objectsCount)
availFactors
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
factorsData
factorsData@stimuliFactors <- data.frame(ownerID <- c(), factorID <- c(), value <- c())
factorsData
factorsData@stimuliFactors <- data.frame(ownerID <- c(1), factorID <- c(1), value <- c(1))
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
factorsData
factorsData@stimuliFactors <- data.frame(ownerID = c(1), factorID = c(1), value = c(1))
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
df2
factorsData
setMethod("asDataFrame",  "FactorsData",
function(self, owner, availableFactors)
{
factorsIDs <- unique(availFactors@availableFactors$id[availableFactors@availableFactors$owner == owner])
if (length(factorsIDs) == 0) {warning("Factors were not specified for this owner!"); return(NULL)}
if (owner == "Subject") {ownersFactors <- factorsData@subjectsFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@stimuliFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@trialsFactors}
ownersIDs <- as.integer(unique(ownersFactors$ownerID))
varCnt <- length(factorsIDs)
factorNames <- sapply(factorsIDs, function(x) {getNameByFactorID(availableFactors,x)})
df <- list()
for (ownerID in ownersIDs)
{
tmpRec <- c(rep(NA, varCnt))
subjFactorsIDs <- ownersFactors$factorID[self@subjectsFactors$ownerID == ownerID]
varPositions <- sapply(subjFactorsIDs, function(x) which(factorsIDs == x))
values <- ownersFactors$value[which(ownersFactors$ownerID == ownerID)]
df <- rbind(df, c(rep(NA, varCnt)))
df[nrow(df), varPositions] <- values
}
df <- as.data.frame(df)
colnames(df) <- factorNames
factorTypes <- sapply(factorsIDs, function(x) {getTypeByFactorID(availableFactors,x)})
factorLevels <- sapply(factorsIDs, function(x) {getLevelsByFactorID(availableFactors,x)})
for (i in 1:length(df))
{
if (factorTypes[i] == "integer") {df[,i] <- as.integer(df[,i])}
if (factorTypes[i] == "numeric") {df[,i] <- as.numeric(df[,i])}
if (factorTypes[i] == "factor") {df[,i] <- factor(df[,i], levels = factorLevels[[i]])}
if (factorTypes[i] == "ordFactor") {df[,i] <- ordered(df[,i], levels = factorLevels[[i]])}
}
df <- cbind(ownersIDs, df)
return(df)
}
)
factorsData <- new(Class = "FactorsData")
factorsData <- addFactorValue(self = factorsData, availableFactors = availFactors, owner = "Subject", ownerID = 1, factorID = 1, value = 179, replace = T)
factorsData <- addFactorValue(self = factorsData, availableFactors = availFactors, owner = "Subject", ownerID = 2, factorID = 1, value = 180, replace = T)
factorsData <- addFactorValue(self = factorsData, availableFactors = availFactors, owner = "Subject", ownerID = 3, factorID = 1, value = 165, replace = T)
factorsData <- addFactorValue(self = factorsData, availableFactors = availFactors, owner = "Subject", ownerID = 4, factorID = 1, value = 190, replace = T)
factorsData <- addFactorValue(self = factorsData, availableFactors = availFactors, owner = "Subject", ownerID = 1, factorID = 3, value = "Male", replace = T)
factorsData <- addFactorValue(self = factorsData, availableFactors = availFactors, owner = "Subject", ownerID = 2, factorID = 3, value = "Male", replace = T)
factorsData <- addFactorValue(self = factorsData, availableFactors = availFactors, owner = "Subject", ownerID = 3, factorID = 3, value = "Male", replace = T)
factorsData <- addFactorValue(self = factorsData, availableFactors = availFactors, owner = "Subject", ownerID = 4, factorID = 3, value = "Male", replace = T)
factorsData <- addFactorValue(self = factorsData, availableFactors = availFactors, owner = "Subject", ownerID = 15, factorID = 3, value = "Male", replace = T)
res <- loadFactorsData(file = "F:\\Институт\\Проекты\\EyeTrackingPackage\\Data\\Factors\\Subjects.txt",
header = T, sep = "\t", dec = ",", encoding = "UTF-8")
varCnt <- length(res$names)
### THESE SHOULD BE SPECIFIED BY A USER THROUGH GUI ###
owners <- rep("Subject", varCnt)
varNames <- c("Height", "academicLevel", "Sex", "CognitiveStyle1")
colnames(res$data) <- c("id", varNames)
descriptions <- c("Height", "academicLevel", "Sex", "CognitiveStyle1")
types <- c("integer", "ordFactor", "factor", "numeric")
levels <- list("NA", c("Student", "PostDoc Student", "PhD"), c("Male", "Female"), "NA")
### FACTORS LOADING ###
for (i in 1:varCnt)
{
f <- new(Class = "Factor",
varName = varNames[i],
description = descriptions[i],
type = types[i],
levels = levels[[i]],
owner = owners[i])
availFactors <- addFactorDefinition(availFactors, factor = f)
}
availFactors #NEW FACTORS LOADED
factorsData1 <- factorsData
factorsData
obsCnt <- nrow(res$data)
for (i in 1:obsCnt)
{
ownerID <- res$data$id[i]
records <- res$data
for (j in 2:ncol(records))
{
factorName <- colnames(res$data)[j]
factorID <- getFactorIDByName(self = availFactors, factorName = factorName)
value <- res$data[i,j]
factorsData <- addFactorValue(self = factorsData, availableFactors = availFactors, owner = "Subject",
ownerID = ownerID, factorID = factorID, value = value, replace = T)
}
}
factorsData
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
df2 <- asDataFrame(factorsData, owner = "Subject", availFactors)
df2
factorsData
availFactors
df2 <- asDataFrame(factorsData, owner = "Subject", availFactors)
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
setMethod("asDataFrame",  "FactorsData",
function(self, owner, availableFactors)
{
factorsIDs <- unique(availFactors@availableFactors$id[availableFactors@availableFactors$owner == owner])
if (length(factorsIDs) == 0) {warning("Factors were not specified for this owner!"); return(NULL)}
if (owner == "Subject") {ownersFactors <- factorsData@subjectsFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@stimuliFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@trialsFactors}
if (nrow(ownersFactors) == 0) {warning("No values for factors for this owner!"); return(NULL)}
ownersIDs <- as.integer(unique(ownersFactors$ownerID))
varCnt <- length(factorsIDs)
factorNames <- sapply(factorsIDs, function(x) {getNameByFactorID(availableFactors,x)})
df <- list()
for (ownerID in ownersIDs)
{
tmpRec <- c(rep(NA, varCnt))
subjFactorsIDs <- ownersFactors$factorID[self@subjectsFactors$ownerID == ownerID]
varPositions <- sapply(subjFactorsIDs, function(x) which(factorsIDs == x))
values <- ownersFactors$value[which(ownersFactors$ownerID == ownerID)]
df <- rbind(df, c(rep(NA, varCnt)))
df[nrow(df), varPositions] <- values
}
df <- as.data.frame(df)
colnames(df) <- factorNames
factorTypes <- sapply(factorsIDs, function(x) {getTypeByFactorID(availableFactors,x)})
factorLevels <- sapply(factorsIDs, function(x) {getLevelsByFactorID(availableFactors,x)})
for (i in 1:length(df))
{
if (factorTypes[i] == "integer") {df[,i] <- as.integer(df[,i])}
if (factorTypes[i] == "numeric") {df[,i] <- as.numeric(df[,i])}
if (factorTypes[i] == "factor") {df[,i] <- factor(df[,i], levels = factorLevels[[i]])}
if (factorTypes[i] == "ordFactor") {df[,i] <- ordered(df[,i], levels = factorLevels[[i]])}
}
df <- cbind(ownersIDs, df)
return(df)
}
)
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
setMethod("asDataFrame",  "FactorsData",
function(self, owner, availableFactors)
{
factorsIDs <- unique(availFactors@availableFactors$id[availableFactors@availableFactors$owner == owner])
if (length(factorsIDs) == 0) {warning("Factors were not specified for this owner!"); return(NULL)}
if (owner == "Subject") {ownersFactors <- factorsData@subjectsFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@stimuliFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@trialsFactors}
if (nrow(ownersFactors) == 0) {warning("Factor values are not specified for this owner!"); return(NULL)}
ownersIDs <- as.integer(unique(ownersFactors$ownerID))
varCnt <- length(factorsIDs)
factorNames <- sapply(factorsIDs, function(x) {getNameByFactorID(availableFactors,x)})
df <- list()
for (ownerID in ownersIDs)
{
tmpRec <- c(rep(NA, varCnt))
subjFactorsIDs <- ownersFactors$factorID[self@subjectsFactors$ownerID == ownerID]
varPositions <- sapply(subjFactorsIDs, function(x) which(factorsIDs == x))
values <- ownersFactors$value[which(ownersFactors$ownerID == ownerID)]
df <- rbind(df, c(rep(NA, varCnt)))
df[nrow(df), varPositions] <- values
}
df <- as.data.frame(df)
colnames(df) <- factorNames
factorTypes <- sapply(factorsIDs, function(x) {getTypeByFactorID(availableFactors,x)})
factorLevels <- sapply(factorsIDs, function(x) {getLevelsByFactorID(availableFactors,x)})
for (i in 1:length(df))
{
if (factorTypes[i] == "integer") {df[,i] <- as.integer(df[,i])}
if (factorTypes[i] == "numeric") {df[,i] <- as.numeric(df[,i])}
if (factorTypes[i] == "factor") {df[,i] <- factor(df[,i], levels = factorLevels[[i]])}
if (factorTypes[i] == "ordFactor") {df[,i] <- ordered(df[,i], levels = factorLevels[[i]])}
}
df <- cbind(ownersIDs, df)
return(df)
}
)
availFactors
source('F:/Институт/Проекты/EyeTrackingPackage/Git/EyeTrackingProject/testFunctions.R', echo=TRUE)
factorsData <- addFactorValue(self = factorsData, availableFactors = availFactors, owner = "Stimulus", ownerID = 1, factorID = 7, value = 10, replace = T)
factorsData
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
factorsData
availFactors
factorsData
factorsData@stimuliFactors
str(factorsData@stimuliFactors)
nrow(factorsData@stimuliFactors)
factorsData
setMethod("asDataFrame",  "FactorsData",
function(self, owner, availableFactors)
{
factorsIDs <- unique(availFactors@availableFactors$id[availableFactors@availableFactors$owner == owner])
if (length(factorsIDs) == 0) {warning("Factors were not specified for this owner!"); return(NULL)}
if (owner == "Subject") {ownersFactors <- factorsData@subjectsFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@stimuliFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@trialsFactors}
#if (nrow(ownersFactors) == 0) {warning("Factor values are not specified for this owner!"); return(NULL)}
ownersIDs <- as.integer(unique(ownersFactors$ownerID))
varCnt <- length(factorsIDs)
factorNames <- sapply(factorsIDs, function(x) {getNameByFactorID(availableFactors,x)})
df <- list()
for (ownerID in ownersIDs)
{
tmpRec <- c(rep(NA, varCnt))
subjFactorsIDs <- ownersFactors$factorID[self@subjectsFactors$ownerID == ownerID]
varPositions <- sapply(subjFactorsIDs, function(x) which(factorsIDs == x))
values <- ownersFactors$value[which(ownersFactors$ownerID == ownerID)]
df <- rbind(df, c(rep(NA, varCnt)))
df[nrow(df), varPositions] <- values
}
df <- as.data.frame(df)
colnames(df) <- factorNames
factorTypes <- sapply(factorsIDs, function(x) {getTypeByFactorID(availableFactors,x)})
factorLevels <- sapply(factorsIDs, function(x) {getLevelsByFactorID(availableFactors,x)})
for (i in 1:length(df))
{
if (factorTypes[i] == "integer") {df[,i] <- as.integer(df[,i])}
if (factorTypes[i] == "numeric") {df[,i] <- as.numeric(df[,i])}
if (factorTypes[i] == "factor") {df[,i] <- factor(df[,i], levels = factorLevels[[i]])}
if (factorTypes[i] == "ordFactor") {df[,i] <- ordered(df[,i], levels = factorLevels[[i]])}
}
df <- cbind(ownersIDs, df)
return(df)
}
)
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
setMethod("asDataFrame",  "FactorsData",
function(self, owner, availableFactors)
{
factorsIDs <- unique(availFactors@availableFactors$id[availableFactors@availableFactors$owner == owner])
if (length(factorsIDs) == 0) {warning("Factors were not specified for this owner!"); return(NULL)}
if (owner == "Subject") {ownersFactors <- factorsData@subjectsFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@stimuliFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@trialsFactors}
print(ownersFactors)
if (nrow(ownersFactors) == 0) {warning("Factor values are not specified for this owner!"); return(NULL)}
ownersIDs <- as.integer(unique(ownersFactors$ownerID))
varCnt <- length(factorsIDs)
factorNames <- sapply(factorsIDs, function(x) {getNameByFactorID(availableFactors,x)})
df <- list()
for (ownerID in ownersIDs)
{
tmpRec <- c(rep(NA, varCnt))
subjFactorsIDs <- ownersFactors$factorID[self@subjectsFactors$ownerID == ownerID]
varPositions <- sapply(subjFactorsIDs, function(x) which(factorsIDs == x))
values <- ownersFactors$value[which(ownersFactors$ownerID == ownerID)]
df <- rbind(df, c(rep(NA, varCnt)))
df[nrow(df), varPositions] <- values
}
df <- as.data.frame(df)
colnames(df) <- factorNames
factorTypes <- sapply(factorsIDs, function(x) {getTypeByFactorID(availableFactors,x)})
factorLevels <- sapply(factorsIDs, function(x) {getLevelsByFactorID(availableFactors,x)})
for (i in 1:length(df))
{
if (factorTypes[i] == "integer") {df[,i] <- as.integer(df[,i])}
if (factorTypes[i] == "numeric") {df[,i] <- as.numeric(df[,i])}
if (factorTypes[i] == "factor") {df[,i] <- factor(df[,i], levels = factorLevels[[i]])}
if (factorTypes[i] == "ordFactor") {df[,i] <- ordered(df[,i], levels = factorLevels[[i]])}
}
df <- cbind(ownersIDs, df)
return(df)
}
)
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
factorsData
setMethod("asDataFrame",  "FactorsData",
function(self, owner, availableFactors)
{
factorsIDs <- unique(availFactors@availableFactors$id[availableFactors@availableFactors$owner == owner])
if (length(factorsIDs) == 0) {warning("Factors were not specified for this owner!"); return(NULL)}
if (owner == "Subject") {ownersFactors <- factorsData@subjectsFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@stimuliFactors}
if (owner == "Trial") {ownersFactors <- factorsData@trialsFactors}
print(ownersFactors)
if (nrow(ownersFactors) == 0) {warning("Factor values are not specified for this owner!"); return(NULL)}
ownersIDs <- as.integer(unique(ownersFactors$ownerID))
varCnt <- length(factorsIDs)
factorNames <- sapply(factorsIDs, function(x) {getNameByFactorID(availableFactors,x)})
df <- list()
for (ownerID in ownersIDs)
{
tmpRec <- c(rep(NA, varCnt))
subjFactorsIDs <- ownersFactors$factorID[self@subjectsFactors$ownerID == ownerID]
varPositions <- sapply(subjFactorsIDs, function(x) which(factorsIDs == x))
values <- ownersFactors$value[which(ownersFactors$ownerID == ownerID)]
df <- rbind(df, c(rep(NA, varCnt)))
df[nrow(df), varPositions] <- values
}
df <- as.data.frame(df)
colnames(df) <- factorNames
factorTypes <- sapply(factorsIDs, function(x) {getTypeByFactorID(availableFactors,x)})
factorLevels <- sapply(factorsIDs, function(x) {getLevelsByFactorID(availableFactors,x)})
for (i in 1:length(df))
{
if (factorTypes[i] == "integer") {df[,i] <- as.integer(df[,i])}
if (factorTypes[i] == "numeric") {df[,i] <- as.numeric(df[,i])}
if (factorTypes[i] == "factor") {df[,i] <- factor(df[,i], levels = factorLevels[[i]])}
if (factorTypes[i] == "ordFactor") {df[,i] <- ordered(df[,i], levels = factorLevels[[i]])}
}
df <- cbind(ownersIDs, df)
return(df)
}
)
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
factorsData
availFactors
setMethod("asDataFrame",  "FactorsData",
function(self, owner, availableFactors)
{
factorsIDs <- unique(availFactors@availableFactors$id[availableFactors@availableFactors$owner == owner])
if (length(factorsIDs) == 0) {warning("Factors were not specified for this owner!"); return(NULL)}
if (owner == "Subject") {ownersFactors <- factorsData@subjectsFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@stimuliFactors}
if (owner == "Trial") {ownersFactors <- factorsData@trialsFactors}
if (nrow(ownersFactors) == 0) {warning("Factor values are not specified for this owner!"); return(NULL)}
ownersIDs <- as.integer(unique(ownersFactors$ownerID))
varCnt <- length(factorsIDs)
print(factorsIDs)
factorNames <- sapply(factorsIDs, function(x) {getNameByFactorID(availableFactors,x)})
df <- list()
for (ownerID in ownersIDs)
{
tmpRec <- c(rep(NA, varCnt))
subjFactorsIDs <- ownersFactors$factorID[self@subjectsFactors$ownerID == ownerID]
varPositions <- sapply(subjFactorsIDs, function(x) which(factorsIDs == x))
values <- ownersFactors$value[which(ownersFactors$ownerID == ownerID)]
df <- rbind(df, c(rep(NA, varCnt)))
df[nrow(df), varPositions] <- values
}
df <- as.data.frame(df)
colnames(df) <- factorNames
factorTypes <- sapply(factorsIDs, function(x) {getTypeByFactorID(availableFactors,x)})
factorLevels <- sapply(factorsIDs, function(x) {getLevelsByFactorID(availableFactors,x)})
for (i in 1:length(df))
{
if (factorTypes[i] == "integer") {df[,i] <- as.integer(df[,i])}
if (factorTypes[i] == "numeric") {df[,i] <- as.numeric(df[,i])}
if (factorTypes[i] == "factor") {df[,i] <- factor(df[,i], levels = factorLevels[[i]])}
if (factorTypes[i] == "ordFactor") {df[,i] <- ordered(df[,i], levels = factorLevels[[i]])}
}
df <- cbind(ownersIDs, df)
return(df)
}
)
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
setMethod("asDataFrame",  "FactorsData",
function(self, owner, availableFactors)
{
factorsIDs <- unique(availFactors@availableFactors$id[availableFactors@availableFactors$owner == owner])
if (length(factorsIDs) == 0) {warning("Factors were not specified for this owner!"); return(NULL)}
if (owner == "Subject") {ownersFactors <- factorsData@subjectsFactors}
if (owner == "Stimulus") {ownersFactors <- factorsData@stimuliFactors}
if (owner == "Trial") {ownersFactors <- factorsData@trialsFactors}
if (nrow(ownersFactors) == 0) {warning("Factor values are not specified for this owner!"); return(NULL)}
ownersIDs <- as.integer(unique(ownersFactors$ownerID))
varCnt <- length(factorsIDs)
factorNames <- sapply(factorsIDs, function(x) {getNameByFactorID(availableFactors,x)})
df <- list()
for (ownerID in ownersIDs)
{
ownerFactorsIDs <- ownersFactors$factorID[ownersFactors$ownerID == ownerID]
varPositions <- sapply(ownerFactorsIDs, function(x) which(factorsIDs == x))
values <- ownersFactors$value[which(ownersFactors$ownerID == ownerID)]
df <- rbind(df, c(rep(NA, varCnt)))
df[nrow(df), varPositions] <- values
}
df <- as.data.frame(df)
colnames(df) <- factorNames
factorTypes <- sapply(factorsIDs, function(x) {getTypeByFactorID(availableFactors,x)})
factorLevels <- sapply(factorsIDs, function(x) {getLevelsByFactorID(availableFactors,x)})
for (i in 1:length(df))
{
if (factorTypes[i] == "integer") {df[,i] <- as.integer(df[,i])}
if (factorTypes[i] == "numeric") {df[,i] <- as.numeric(df[,i])}
if (factorTypes[i] == "factor") {df[,i] <- factor(df[,i], levels = factorLevels[[i]])}
if (factorTypes[i] == "ordFactor") {df[,i] <- ordered(df[,i], levels = factorLevels[[i]])}
}
df <- cbind(ownersIDs, df)
return(df)
}
)
df2 <- asDataFrame(factorsData, owner = "Stimulus", availFactors)
df2
